
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">

    <security:http pattern="/static/**" security="none"/>
    <security:http pattern="/loginPage" security="none"/>
    <security:http pattern="/js/**" security="none"/>
    <security:http pattern="/home/login" security="none"/>
    <security:http pattern="/admin/login" security="none"/>



    <security:http pattern="/admin/**" authentication-manager-ref="AdminAuthentication">
        <security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
        <security:form-login login-page="/admin/login" login-processing-url="/admin/adminLogin" always-use-default-target="true"
        authentication-success-handler-ref="adminLoginSuccessHandler"
        authentication-failure-handler-ref="adminLoginFailureHandler"/>
        <security:csrf disabled="true"/>
    </security:http>

    <security:http pattern="/**" authentication-manager-ref="UserAuthentication">
        <!--<security:intercept-url pattern="/rawLog/**" access="hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')"/>-->
        <!--<security:intercept-url pattern="/normalLog/**" access="hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')"/>-->
        <!--<security:intercept-url pattern="/eventLog/**" access="hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')"/>-->
        <security:intercept-url pattern="/**" access="hasRole('ROLE_USER')"/>
        <security:form-login login-page="/home/login" login-processing-url="/login" always-use-default-target="true"
        authentication-success-handler-ref="userLoginSuccessHandler"
        authentication-failure-handler-ref="userLoginFailureHandler"/>
        <security:csrf disabled="true"/>
    </security:http>

    <security:authentication-manager id="UserAuthentication">
        <security:authentication-provider ref="userAuthenticationProvider"/>
    </security:authentication-manager>

    <security:authentication-manager id="AdminAuthentication">
        <security:authentication-provider ref="adminAuthenticationProvider"/>
    </security:authentication-manager>

    <bean id="adminAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="userDetailsService" ref="adminDetailService"/>
        <property name="hideUserNotFoundExceptions" value="false"/>
    </bean>
    <bean id="userAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name="hideUserNotFoundExceptions" value="false"/>
        <property name="userDetailsService" ref="myUserDetailsService"/>
    </bean>
    <bean id="adminLoginFailureHandler" class="org.k2.processmining.security.AdminLoginFailureHandler"/>
    <bean id="adminLoginSuccessHandler" class="org.k2.processmining.security.AdminLoginSuccessHandler"/>
    <bean id="myUserDetailsService" class="org.k2.processmining.security.MyUserDetailService"/>
    <bean id="adminDetailService" class="org.k2.processmining.security.AdminDetailService"/>
    <bean id="userLoginSuccessHandler" class="org.k2.processmining.security.UserLoginSuccessHandler"/>
    <bean id="userLoginFailureHandler" class="org.k2.processmining.security.UserLoginFailureHandler"/>

</beans>