<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.k2.processmining.mapper.EventLogMapper">

    <insert id="save" parameterType="EventLog">
        INSERT INTO event_log(id, log_name, create_date, userid, format, normal_log_id, state, isshared,
         merge_relation, case_number, event_number, per_event_incase, event_names, operator_names)
        VALUES (#{id}, #{logName}, #{createDate}, #{userId}, #{format}, #{normalLogId}, #{state}, #{isShared},
                  #{mergeRelation}, #{caseNumber}, #{eventNumber}, #{perEventInCase}, #{eventNames}, #{operatorNames})
    </insert>
    
    <select id="getEventLogById" resultMap="eventLog">
        SELECT * FROM event_log WHERE id=#{id}
    </select>


    <select id="listLogsByUserIdAndState" resultMap="org.k2.processmining.mapper.RawLogMapper.logGroup">
        SELECT
          <include refid="org.k2.processmining.mapper.RawLogMapper.logGroupSelectColumns"/>
        FROM
        (SELECT * FROM event_log WHERE userid=#{userId} AND state=#{state}) EL
        LEFT JOIN normal_log NL ON EL.normal_log_id = NL.id
        LEFT JOIN raw_log RL ON NL.raw_log_id = RL.id
    </select>

    <select id="listLogsByStateAndSharedState" resultMap="org.k2.processmining.mapper.RawLogMapper.logGroup">
        SELECT
        <include refid="org.k2.processmining.mapper.RawLogMapper.userColumns"/>
        ,
        <include refid="org.k2.processmining.mapper.RawLogMapper.logGroupSelectColumns"/>
        FROM
        (SELECT * FROM event_log WHERE state=#{state} AND isshared=#{isShared}) EL
        LEFT JOIN normal_log NL ON EL.normal_log_id = NL.id
        LEFT JOIN raw_log RL ON NL.raw_log_id = RL.id
        LEFT JOIN user ON EL.userid = user.id;
    </select>

    <select id="listLogsByFuzzyName" resultMap="org.k2.processmining.mapper.RawLogMapper.logGroup">
        SELECT
        <include refid="org.k2.processmining.mapper.RawLogMapper.userColumns"/>
        ,
        <include refid="org.k2.processmining.mapper.RawLogMapper.logGroupSelectColumns"/>
        FROM
        (SELECT * FROM event_log WHERE log_name LIKE concat(concat('%',#{keyWord}),'%') AND userid = #{userid}) EL
        LEFT JOIN normal_log NL ON EL.normal_log_id = NL.id
        LEFT JOIN raw_log RL ON NL.raw_log_id = RL.id
        LEFT JOIN user ON EL.userid = user.id;
    </select>

    <update id="updateShareStateByLogId">
        UPDATE event_log
        SET isshared = #{isshared,jdbcType = TINYINT}
        WHERE id IN
        <foreach collection="idList" item="item" index="index" separator="," open="(" close=")">
            #{item}
        </foreach>
    </update>

    <update id="updateLogStateByLogId">
        UPDATE event_log
        SET state = #{state, jdbcType = TINYINT}
        WHERE id IN
        <foreach collection="idList" item="item" index="index" separator="," open="(" close=")">
            #{item}
        </foreach>
    </update>

    <resultMap id="eventLog" type="EventLog">
        <id column="id" property="id"/>
        <result column="log_name" property="logName"/>
        <result column="create_date" property="createDate"/>
        <result column="userid" property="userId"/>
        <result column="format" property="format"/>
        <result column="normal_log_id" property="normalLogId"/>
        <result column="isshared" property="isShared"/>
        <result column="state" property="state"/>
        <result column="merge_relation" property="mergeRelation"/>
        <result column="case_number" property="caseNumber"/>
        <result column="event_number" property="eventNumber"/>
        <result column="per_event_incase" property="perEventInCase"/>
        <result column="event_names" property="eventNames"/>
        <result column="operator_names" property="operatorNames"/>
    </resultMap>


</mapper>