<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.k2.processmining.mapper.RawLogMapper">

    <sql id="addUserIdIfNotNull">
        <if test="userId != null">
            userid=#{userId} AND
        </if>
    </sql>

    <sql id="addIsSharedIfNotMinus1">
        <if test="isShared != -1">
            AND isshared=#{isShared}
        </if>
    </sql>
    <sql id="addKeyWordIfNotNull">
        <if test="keyWord != null">
            AND log_name LIKE concat(concat('%',#{keyWord}),'%')
        </if>
    </sql>
    <sql id="addUserColumnIfUserIdIsNull">
        <if test="userId == null">
            user.id userId, user.username username,
        </if>
    </sql>

    <sql id="logGroupSelectColumns">
        RL.id rawLogId, RL.log_name rawLogName, RL.format rawLogFormat,RL.isshared rawLogIsShared,
        RL.create_date rawLogCreateDate, RL.state rawLogState, RL.userid rawLogUserId,
        NL.id normalLogId, NL.log_name normalLogName, NL.format normalLogFormat,
        NL.create_date normalLogCreateDate, NL.state normalLogState, NL.userid normalLogUserId,
        NL.raw_log_id normalLogRawLogId, NL.isshared normalLogIsShared,
        EL.id eventLogId, EL.log_name eventLogName, EL.format eventLogFormat,
        EL.create_date eventLogCreateDate, EL.state eventLogState, EL.userid eventLogUserId,
        EL.normal_log_id eventLogNormalLogId, EL.isshared eventLogIsShared,
        case_number, event_number, per_event_inCase, event_names, operator_names,merge_relation
    </sql>

    <sql id="rawNormalEventLeftJoin">
        (SELECT * FROM raw_log WHERE
            <include refid="addUserIdIfNotNull"/>
            state=#{state}
            <include refid="addIsSharedIfNotMinus1"/>
            <include refid="addKeyWordIfNotNull"/>
        ) RL
        LEFT JOIN
            (SELECT
                nl.*
            FROM
                normal_log nl,
                (SELECT raw_log_id,MAX(create_date) create_date FROM normal_log GROUP BY raw_log_id HAVING raw_log_id IS NOT NULL) a
            WHERE <include refid="addUserIdIfNotNull"/> nl.raw_log_id=a.raw_log_id AND nl.create_date=a.create_date) NL
        ON RL.id = NL.raw_log_id
        LEFT JOIN
            (SELECT * FROM event_log
            WHERE <include refid="addUserIdIfNotNull"/>
                    state=#{state}
                    <include refid="addIsSharedIfNotMinus1"/>) EL
        ON NL.id = EL.normal_log_id
    </sql>

    <select id="listLogGroups" resultMap="logGroup">
        SELECT
          <include refid="addUserColumnIfUserIdIsNull"/>
          <include refid="logGroupSelectColumns"/>
        FROM
            <include refid="rawNormalEventLeftJoin"/>
            <if test="userId == null">
                LEFT JOIN user ON RL.userid = user.id
            </if>
    </select>

    <select id="listLogGroupsPage" resultMap="logGroup">
        SELECT
            <include refid="addUserColumnIfUserIdIsNull"/>
            <include refid="logGroupSelectColumns"/>
        FROM
            <include refid="rawNormalEventLeftJoin"/>
            <if test="userId == null">
                LEFT JOIN user ON RL.userid = user.id
            </if>
        ORDER BY RL.create_date DESC LIMIT #{offset}, #{size}
    </select>

    <select id="countLogs" resultType="int">
      SELECT
        COUNT(*)
      FROM raw_log
      WHERE
        <include refid="addUserIdIfNotNull"/>
        state=#{state}
        <include refid="addIsSharedIfNotMinus1"/>
        <include refid="addKeyWordIfNotNull"/>

    </select>

    <sql id="lineOfLogIdSQL">
        set @line:=0;
        SELECT
          line
        FROM
          (SELECT
            id, @line:=@line+1 as line
          FROM
            (SELECT * FROM ${table}
            WHERE
              <include refid="org.k2.processmining.mapper.RawLogMapper.addUserIdIfNotNull"/>
              state=#{state}
              <include refid="org.k2.processmining.mapper.RawLogMapper.addIsSharedIfNotMinus1"/>
            ORDER BY create_date DESC) nl
          ) as t
        WHERE id=#{id}
    </sql>

    <select id="lineOfLogId" resultType="int">
        <include refid="lineOfLogIdSQL">
            <property name="table" value="raw_log"/>
        </include>
    </select>

    <select id="getLogById" resultMap="rawLog">
        SELECT * FROM raw_log WHERE id=#{id}
    </select>

    <insert id="save" parameterType="RawLog">
        INSERT INTO raw_log(id, log_name, create_date, userid, format, state, isshared)
         VALUES (#{id}, #{logName}, #{createDate}, #{userId}, #{format}, #{state}, #{isShared})
    </insert>

    <sql id="updateLogStateSQL">
        UPDATE ${table} SET state=#{state} WHERE
        <if test="userId != null">
            userid = #{userId} AND
        </if>
        state!=2 AND
        id in
        <foreach item="item" index="index" collection="ids"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </sql>

    <sql id="updateIsSharedSQL">
        UPDATE ${table} SET isshared=#{isShared} WHERE
        <if test="userId != null">
          userid = #{userId} AND
        </if>
        state!=2 AND
        id in
        <foreach item="item" index="index" collection="ids"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </sql>

    <update id="updateLogState">
        <include refid="updateLogStateSQL">
            <property name="table" value="raw_log"/>
        </include>
    </update>

    <update id="updateIsShared">
        <include refid="updateIsSharedSQL">
            <property name="table" value="raw_log"/>
        </include>
    </update>

    <resultMap id="logGroup" type="LogGroup">
        <association property="user" javaType="User">
            <id column="userId" property="id"/>
            <id column="username" property="name"/>
        </association>

        <association property="rawLog" javaType="RawLog">
            <id column="rawLogId" property="id"/>
            <result column="rawLogName" property="logName"/>
            <result column="rawLogCreateDate" property="createDate"/>
            <result column="rawLogFormat" property="format"/>
            <result column="rawLogState" property="state"/>
            <result column="rawLogUserId" property="userId"/>
            <result column="rawLogIsShared" property="isShared"/>

        </association>
        <association property="normalLog" javaType="NormalLog">
            <id column="normalLogId" property="id"/>
            <result column="normalLogName" property="logName"/>
            <result column="normalLogCreateDate" property="createDate"/>
            <result column="normalLogFormat" property="format"/>
            <result column="normalLogState" property="state"/>
            <result column="normalLogUserId" property="userId"/>
            <result column="normalLogRawLogId" property="rawLogId"/>
            <result column="normalLogIsShared" property="isShared"/>
        </association>
        <association property="eventLog" javaType="EventLog">
            <id column="eventLogId" property="id"/>
            <result column="eventLogName" property="logName"/>
            <result column="eventLogCreateDate" property="createDate"/>
            <result column="eventLogFormat" property="format"/>
            <result column="eventLogState" property="state"/>
            <result column="eventLogUserId" property="userId"/>
            <result column="eventLogNormalLogId" property="normalLogId"/>
            <result column="eventLogIsShared" property="isShared"/>
            <result column="case_number" property="caseNumber"/>
            <result column="event_number" property="eventNumber"/>
            <result column="per_event_incase" property="perEventInCase"/>
            <result column="event_names" property="eventNames"/>
            <result column="operator_names" property="operatorNames"/>
            <result column="merge_relation" property="mergeRelation"/>
        </association>
    </resultMap>


    <resultMap id="rawLog" type="RawLog">
        <id column="id" property="id"/>
        <result column="log_name" property="logName"/>
        <result column="create_date" property="createDate"/>
        <result column="format" property="format"/>
        <result column="state" property="state"/>
        <result column="userid" property="userId"/>
        <result column="isshared" property="isShared"/>
    </resultMap>
</mapper>